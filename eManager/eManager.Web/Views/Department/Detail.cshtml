@model eManager.Domain.Department

@{
    ViewBag.Title = "Detail";
    
}

<div id="form-update"></div>
<div class="page-header container">
    <div class="row">
        <div class="col-sm-2">
            <h2>@Model.Name</h2>
        </div>
        <div class="col-sm-1" style="margin-top: 27px;">
            <a class="btn btn-primary btn-xs create-employee" rel="tooltip" title="Add an employee" data-id="@Model.Id">
                <span class="glyphicon glyphicon-plus"/>
            </a>
        </div>
    </div>
</div>
<hr />


<div class="modal fade" id="employee-modal">
    <div class="modal-dialog">
        <div id="employee-modal-container"></div>
    </div>
</div>
<div class="container page-body">
    <div class="row-fluid">
        <div class="col-md-3 col-md-push-9">
            <h4>Employee Details</h4>
            <div id="Employee-content">
                <p class="muted">Select employee to display detailed information.</p>
            </div>
        </div>
        <div class="col-md-9 col-md-pull-3">
            <div id="grid-container">
                @(Html.Kendo().Grid<eManager.Domain.Employee>()
                    .Name("DepartmentEmployees")
                    .Columns(c =>
                    {
                        c.Bound(e => e.Id).Visible(false);
                        c.Bound(e => e.Id)
                            .ClientTemplate("<a class='btn btn-primary btn-xs edit-employee' title='Edit employee' data-id='#=Id#'><span class='glyphicon glyphicon-pencil' /></a>")
                            .Width(30)
                            .Title("");
                        c.Bound(e => e.Name);
                        c.Bound(e => e.HireDate)
                            .Title("Hire Date");
                    })
                    .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                    .Pageable()
                    .Events(events => events.Change("onChange").DataBound("onDataBound"))
                    .DataSource(datasource => datasource
                        .Ajax()
                        .Read(read => read.Action("Department_Read", "Department", new { id = Model.Id}))
                    )
                 )
            </div>
        </div>
    </div>
</div>




<script src="~/Scripts/jsHelpers.js"></script>
<script>
    $(document).ready(function () {
        $("[rel=tooltip]").tooltip({ placement: 'bottom'});

        $(".create-employee").click(function () {
            openModal(this, "#employee-modal", "#employee-modal-container", "Employee", "Create");   
        }); // $('.create-employee').click() end
    }); // $(document).ready() end

   
    function onDataBound(arg) {
        $(".edit-employee").tooltip({ placement: 'bottom' });
        $('.edit-employee').click(function () {
            openModal(this, "#employee-modal", "#employee-modal-container", "Employee", "Edit");
        }); // $('.edit-employee').click() end
    }

    function onChange(arg) {
        var id = $.map(this.select(), function (item) {
            return $(item).find(".edit-employee").attr('data-id');
        });
        $("#Employee-content").load('@Url.Action("Detail", "Employee")' + '/' + id);
    }

    function openModal(caller, modalName, modalContainer, controller, action) {
        var id = $(caller).attr('data-id');
        var url = '@Url.Action("-1", "-2")'.replace("-1", action).replace("-2", controller);
        $(modalContainer).load(url + "/" + id);
        $(modalName).modal('show');
    }
</script>


<p style="font-size:12px">
    @Html.ActionLink("Back to All Departments", "Departments", "Data")
</p>